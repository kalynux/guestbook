services:
  guestbook:
    build:
      context: .
      target: final
    image: kalynux/guestbook:prod
    labels:
      - "dokploy.rebuild=true"
      - "traefik.enable=true"
      - "traefik.http.routers.guestbook.rule=Host(`gbook.fante.cloud`)"
      - "traefik.http.routers.guestbook.entrypoints=websecure"
      - "traefik.http.routers.guestbook.tls.certresolver=letsencrypt"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=mytest_postgress_password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=guestbook
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
    deploy:
      mode: replicated
      replicas: 3
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dokploy-network
      - guestbook-net

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=guestbook
      - POSTGRES_PASSWORD=mytest_postgress_password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - guestbook-net

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@fante.cloud
      - PGADMIN_DEFAULT_PASSWORD=pgadmin_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.fante.cloud`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls.certresolver=letsencrypt"
      - "traefik.http.routers.pgadmin.middlewares=tailscale-only"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dokploy-network
      - guestbook-net

volumes:
  db-data:

networks:
  guestbook-net:
    driver: bridge
  dokploy-network:
    external: true
    name: dokploy-network